<?xml version="1.0" encoding="UTF-8"?>
<schema version="1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:BibleMultiConverter.RoundtripXML" targetNamespace="urn:BibleMultiConverter.RoundtripXML" elementFormDefault="qualified">
	<annotation>
		<documentation>XML Schema for BibleMultiConverter's RoundtripXML format.</documentation>
	</annotation>

	<simpleType name="NormalizedStringType">
		<annotation>
			<documentation>
				String that does not start or end with whitespace, and where all inner whitespace consists of single space characters.
				All "natural language" attributes inside a Bible (bible name, book names, etc.) have to follow this pattern.
			</documentation>
		</annotation>
		<restriction base="string">
			<pattern value="\S+( \S+)*"></pattern>
		</restriction>
	</simpleType>

	<simpleType name="AbbrType">
		<annotation>
			<documentation>
				Format of a bible book abbreviation. It has to start with a digit or uppercase letter,
				and may continue also with lowercase letters or dots. Minimum length is 2 characters.
				(The inclusion of German umlauts in the letters is considered legacy, but cannot be
				changed without invalidating legacy bible files.)
			</documentation>
		</annotation>
		<restriction base="string">
			<pattern value="[A-Z0-9][A-Z0-9a-z.äöü]+"></pattern>
		</restriction>
	</simpleType>

	<simpleType name="VerseNumberType">
		<annotation>
			<documentation>
				Format of a verse number. After the initial digit (which may not be 0), there can follow other
				digits and some special characters (see below). At the end, an optional lowercase letter (for
				sub-verses) or uppercase G (for Greek version), but not both at the same time, may be added.

				While this verse format sounds complex, most bibles will just use plain numbers here.

				Use dot or slash in verse numbers that represent more than one verse (e.g. 12/14 or 2.5.7). There
				is no semantic difference between them, but some Bibles use both formats at the same time.

				Hyphen is used for verse ranges, e.g. 12-15.

				Comma is used if a verse is moved to a different book (like 41,6 for a verse between Jes 40:20 and Jes 40:21
				in German Einheitsübersetzung (1980 edition)).

				Note that while verses in this bible file can be in a non-numeric order, chapters need to follow the numeric
				order, so using commas in verse numbers is the only workaround to get around this.

				To simplify exporting to Bible formats
				that
				do not support reordered or non-numeric verse numbers, Exporters
				that are part of BibleMultiConverter can use one of two different abstractions, which both are intended to group
				multiple "real" verses into one new verse (preserving the order of the text):

				"Virtual Verses" will combine multiple verses into numerical verses in ascending order. Verses that do not
				follow the order or are non-numeric are joined at the end of the previous verse. Non-numeric verses at the beginning
				of chapters, as well as headlines in the middle of verses, result in a new "synthetic" verse. This abstraction
				can optionally also follow a versification scheme and join verses whose verse numbers lie outside of the
				versification. Choose the abstraction to minimize the amount of joined verses at the expense that the numerical
				verse number and the real verse number can differ vastly in some cases (like reordered verses).

				"Verse ranges" will also combine verses, but the resulting verses may be ranges (two verse
				numbers
				separated by a
				dash) and do not have to be consecutive. All non-numerical verse numbers are grouped in a way to minimize the grouping,
				but still assuring that every "real" verse number lies in the range of its "new" verse.

				For external conversion, StrippedDiffable has a ChangeVerseStructure option to "persist" virtual verses or verse ranges.
			</documentation>
		</annotation>
		<restriction base="string">
			<pattern value="[1-9][0-9,/.-]*[a-zG]?"></pattern>
		</restriction>
	</simpleType>

	<simpleType name="RMACType">
		<annotation>
			<documentation>
				Format of a valid Robinson's Morphological Analysis Code or WIVU Hebrew Morphology Code. Some formats will use a different representation,
				so to make conversion work without errors, the allowed pattern is restricted here.
			</documentation>
		</annotation>
		<restriction base="string">
			<pattern value="(ADV|CONJ|COND|PRT|PREP|INJ|ARAM|HEB|N-PRI|A-NUI|N-LI|N-OI|[NARCDTKIXQFSP](-[123]?[NVGDA][SP][MFN]?)?|[NA]-[NVGDA][SP][MFN]-([PLT]|[PL]G|LI)|A-[NVGDA][SP][MFN]-NUI|S-[123][SP][NVGDA][SP][MFN])(-(S|C|ABB|I|N|K|ATT|ARAM|HEB))?|V-([PIFARLX]|2[PFARL])[AMPEDONQX][ISOMNP](-([123][SP]|[NGDAV][SPD][MFN]))?(-ATT|-ARAM|-HEB)?|[HA](C|D|Np[mflt]?|(A[acgo]|N[cgtx])(|[bcfmx][dpsx][acd])|(P[dfipr]|S[dhnp])(|[123x][bcfm][dps])|R[d]?|T[acdeijmnor]?|V[DGHKLMNOPQabcefhijklmopqrstuvwyz][pqiwhjvrsauc](|[bfm]|[123][bcfm][dps]|[bcfm][dps][acd]|[ac]))(//?(C|D|Np[mflt]?|(A[acgo]|N[cgtx])(|[bcfmx][dpsx][acd])|(P[dfipr]|S[dhnp])(|[123x][bcfm][dps])|R[d]?|T[acdeijmnor]?|V[DGHKLMNOPQabcefhijklmopqrstuvwyz][pqiwhjvrsauc](|[bfm]|[123][bcfm][dps]|[bcfm][dps][acd]|[ac])))*"></pattern>
		</restriction>
	</simpleType>

	<simpleType name="LineBreakKindType">
		<annotation>
			<documentation>
				List of supported line break kinds (styles). Compared to other bible formats like USFM, this list is rather
				short. Paragraphs usually include some vertical space while newlines do not. Newlines with indent are mostly
				used inside the Psalms, and are a legacy style which is equivalent to a newline with an indent of 1.

				indent for semanticDivision is the division height, and for table cells it is the colspan. Tables end on
				any line break that is neither one of the table ones nor a newline. Formats that do not support tables will
				convert tableRowFirstCell to a paragraph and tableRowNextCell to a newline with indentation.

				As this format follows the "verses first" paradigm, line breaks are stored inside the verses. A line break
				or paragraph between two verses is stored at the end of the previous verse.

				Chapters and headlines are considered to start a new paragraph automatically, so no need for additional tagging.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="paragraph" />
			<enumeration value="newline" />
			<enumeration value="newlineWithIndent" />
			<enumeration value="noFirstLineIndent" />
			<enumeration value="hangingIndent" />
			<enumeration value="pageBreak" />
			<enumeration value="blankLine" />
			<enumeration value="semanticDivision" />
			<enumeration value="tableRowFirstCell" />
			<enumeration value="tableRowNextCell" />
			<enumeration value="poeticLine" />
			<enumeration value="sameLineIfPossible" />
		</restriction>
	</simpleType>

	<simpleType name="RawHTMLModeType">
		<annotation>
			<documentation>
				Bibles can contain embedded Raw HTML. This HTML can be either shown only for online formats (i.e. formats
				that are read in a browser), only for offline formats (i.e. formats that are read without Internet connection),
				or for both. Formats that do not support Raw HTML (i.e. formats that are not HTML based)
				should skip these elements.

				Therefore, Raw HTML should not contain any elements that are required for the correct representation
				of the Bible. If required, normal text can be put between two Raw HTML elements, one that opens a HTML
				comment and one that closes it again.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="online"></enumeration>
			<enumeration value="offline"></enumeration>
			<enumeration value="both"></enumeration>
		</restriction>
	</simpleType>


	<simpleType name="HyperlinkTypeType">
		<annotation>
			<documentation>
				Hyperlink or anchor type.

				Internal link targets start with # and reference an anchor of same name.

				External link and image link targets are absolute URLs.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="anchor"></enumeration>
			<enumeration value="internalLink"></enumeration>
			<enumeration value="externalLink"></enumeration>
			<enumeration value="image"></enumeration>
		</restriction>
	</simpleType>

	<simpleType name="ExtraAttributePrioType">
		<annotation>
			<documentation>
				Extra attributes are used to encode features that are not supported by this format. They are mostly useful for
				"round trip" conversion from another format to this format, and back later after editing/processing.

				Formats that do not support this extra attribute should treat it depending on its priority.

				Importers/Exporters part of BibleMultiConverter can use ExtraAttributePriority.handleVisitor to automatically
				handle an attribute depending on its category.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="keepContent">
				<annotation>
					<documentation>
						Skip this attribute but keep its content.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="skip">
				<annotation>
					<documentation>
						Skip this attribute including its content.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="error">
				<annotation>
					<documentation>
						Treat the existence of this attribute as an error and abort conversion.
						Use this category carefully.
					</documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<simpleType name="FormattingInstructionKindType">
		<annotation>
			<documentation>
				Texts within Bible verses can be formatted in various ways. This enumeration lists all the special
				formatting kinds that are supported. In addition, text can be formatted using CSS attributes.

				Import modules should always try to use explicit formatting instructions instead of CSS formatting.
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="bold" />
			<enumeration value="italic" />
			<enumeration value="underline" />
			<enumeration value="link">
				<annotation>
					<documentation>
						Used to indicate that the text linked to another place in the original bible,
						which is not supported by this format in another way. The destination of the
						link is not encoded in any way.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="footnoteLink">
				<annotation>
					<documentation>
						Some bible formats highlight the part of the verse a footnote refers to.
						This can be encoded by enclosing both the text and the footnote in a single "footnoteLink" formatting.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="subscript" />
			<enumeration value="superscript" />
			<enumeration value="divineName" />
			<enumeration value="strikeThrough" />
			<enumeration value="wordsOfJesus" />
			<enumeration value="addition">
				<annotation>
					<documentation>
						Text that was added by the translator and did not exist in the source of the translation.
						Usually rendered in italics.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="psalmDescriptiveTitle">
				<annotation>
					<documentation>
						Descriptive text (e.g. about David and musical instruments) at the beginning of a Psalm.
						Sometimes part of verse 1, sometimes before. Usually rendered in italics.
					</documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<simpleType name="positiveIntType">
		<restriction base="int">
			<minInclusive value="1"></minInclusive>
		</restriction>
	</simpleType>

	<simpleType name="BookIDType">
		<annotation>
			<documentation>
				Representation of a Bible book. Values mostly follow the OSIS standard; exceptions start with x- and
				are documented separately.

				Normal Bibles cannot contain Dictionary entries ("x-Dict-*"). Dictionary books can only contain metadata
				and Dictionary entries.
			</documentation>
		</annotation>
		<!-- Unique constraints cannot exclude some values; therefore, allow a pattern for dictionary entries. As patterns cannot be combined with enum values directly, use a union here. -->
		<union>
			<simpleType>
				<restriction base="string">
					<enumeration value="x-Meta">
						<annotation>
							<documentation>
								Metadata book. This book consists of a single chapter with only a prolog. The prolog
								consists of key/value pairs (key and value separated by a colon), each in its own paragraph.

								Metadata keys are one of the predefined keys below, or contain an @ symbol
								(for private metadata of a specific format).

								Predefined keys: version, revision, status,
								source, identifier, type, publisher, date, coverage, format, creator,
								language, subject, contributors, description, title, rights, contributor.
							</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-Intr">
						<annotation>
							<documentation>Introduction</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-IntrOT">
						<annotation>
							<documentation>Introduction to the Old Testament</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-IntrNT">
						<annotation>
							<documentation>Introduction to the New Testament</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App">
						<annotation>
							<documentation>Generic Appendix</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App-Other">
						<annotation>
							<documentation>Other Appendix</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App-Conc">
						<annotation>
							<documentation>Concordance</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App-Gloss">
						<annotation>
							<documentation>Glossary</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App-Topical">
						<annotation>
							<documentation>Topical Index</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-App-Names">
						<annotation>
							<documentation>Names index</documentation>
						</annotation>
					</enumeration>
					<enumeration value="x-Dict">
						<annotation>
							<documentation>Dictionary Entry</documentation>
						</annotation>
					</enumeration>

					<enumeration value="Gen" />
					<enumeration value="Exod" />
					<enumeration value="Lev" />
					<enumeration value="Num" />
					<enumeration value="Deut" />
					<enumeration value="Josh" />
					<enumeration value="Judg" />
					<enumeration value="Ruth" />
					<enumeration value="1Sam" />
					<enumeration value="2Sam" />
					<enumeration value="1Kgs" />
					<enumeration value="2Kgs" />
					<enumeration value="1Chr" />
					<enumeration value="2Chr" />
					<enumeration value="Ezra" />
					<enumeration value="Neh" />
					<enumeration value="Esth" />
					<enumeration value="Job" />
					<enumeration value="Ps" />
					<enumeration value="Prov" />
					<enumeration value="Eccl" />
					<enumeration value="Song" />
					<enumeration value="Isa" />
					<enumeration value="Jer" />
					<enumeration value="Lam" />
					<enumeration value="Ezek" />
					<enumeration value="Dan" />
					<enumeration value="Hos" />
					<enumeration value="Joel" />
					<enumeration value="Amos" />
					<enumeration value="Obad" />
					<enumeration value="Jonah" />
					<enumeration value="Mic" />
					<enumeration value="Nah" />
					<enumeration value="Hab" />
					<enumeration value="Zeph" />
					<enumeration value="Hag" />
					<enumeration value="Zech" />
					<enumeration value="Mal" />

					<enumeration value="Matt" />
					<enumeration value="Mark" />
					<enumeration value="Luke" />
					<enumeration value="John" />
					<enumeration value="Acts" />
					<enumeration value="Rom" />
					<enumeration value="1Cor" />
					<enumeration value="2Cor" />
					<enumeration value="Gal" />
					<enumeration value="Eph" />
					<enumeration value="Phil" />
					<enumeration value="Col" />
					<enumeration value="1Thess" />
					<enumeration value="2Thess" />
					<enumeration value="1Tim" />
					<enumeration value="2Tim" />
					<enumeration value="Titus" />
					<enumeration value="Phlm" />
					<enumeration value="Heb" />
					<enumeration value="Jas" />
					<enumeration value="1Pet" />
					<enumeration value="2Pet" />
					<enumeration value="1John" />
					<enumeration value="2John" />
					<enumeration value="3John" />
					<enumeration value="Jude" />
					<enumeration value="Rev" />

					<enumeration value="Jdt" />
					<enumeration value="Wis" />
					<enumeration value="Tob" />
					<enumeration value="Sir" />
					<enumeration value="Bar" />
					<enumeration value="1Macc" />
					<enumeration value="2Macc" />
					<enumeration value="AddDan" />
					<enumeration value="AddEsth" />
					<enumeration value="PrMan" />
					<enumeration value="3Macc" />
					<enumeration value="4Macc" />
					<enumeration value="EpJer" />
					<enumeration value="1Esd" />
					<enumeration value="2Esd" />
					<enumeration value="Odes" />
					<enumeration value="PssSol" />
					<enumeration value="EpLao" />
					<enumeration value="1En" />
					<enumeration value="x-kGen">
						<annotation>
							<documentation>
								"Kleines Genesis" (Lesser Genesis) used by some Zefania XML bibles. In fact it is a
								duplicate assignment for Jubilees ("Jub"). When possible, use "Jub" instead.
							</documentation>
						</annotation>
					</enumeration>
					<enumeration value="Sus" />
					<enumeration value="Bel" />
					<enumeration value="AddPs" />
					<enumeration value="PrAzar" />
					<enumeration value="EsthGr" />
					<enumeration value="DanGr" />
					<enumeration value="Jub" />
					<enumeration value="4Ezra" />
					<enumeration value="5Ezra" />
					<enumeration value="6Ezra" />
					<enumeration value="5ApocSyrPss" />
					<enumeration value="2Bar" />
					<enumeration value="4Bar" />
					<enumeration value="EpBar" />
					<enumeration value="1Meq" />
					<enumeration value="2Meq" />
					<enumeration value="3Meq" />
					<enumeration value="Rep" />
				</restriction>
			</simpleType>
			<simpleType>
				<restriction base="string">
					<pattern value="x-Dict-[0-9]+" />
				</restriction>
			</simpleType>
		</union>
	</simpleType>


	<complexType name="FormattedTextType" mixed="true">
		<annotation>
			<documentation>
				Represents text that can contain different formattings. Formattings can be nested, but not arbitrarily.

				Verse separators may only be in verses. Headlines, footnotes and links may not be nested.
				Cross references may only appear in footnotes and in prolog text, not in verse text.

				Use the "Validate" module to validate these constraints.
			</documentation>
		</annotation>
		<choice maxOccurs="unbounded" minOccurs="0">
			<element name="headline">
				<complexType>
					<annotation>
						<documentation>
							Headlines have a depth (1 being the biggest level).
							Consecutive headlines without text in between need to have "increasing" depth
							(with the exception that two consecutive headlines may both be depth 9).
						</documentation>
					</annotation>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="depth" use="required">
								<simpleType>
									<restriction base="int">
										<minInclusive value="1"></minInclusive>
										<maxInclusive value="9"></maxInclusive>
									</restriction>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="footnote">
				<annotation>
					<documentation>
						Some explanatory text that gets represented as a footnote mark. Cross references have to be inside footnotes (if they are not in the prolog),
						which should have ofCrossReferences=true.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="ofCrossReferences" type="boolean" use="optional" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="crossReference">
				<annotation>
					<documentation>
						Special type of link that links to a different location in the Bible.
						Unlike some other formats, cross references need to have text inside, which is used to
						show the cross reference. Referenced chapter and verse numbers must exist in this Bible.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="bookAbbr" type="tns:AbbrType" use="required" />
							<attribute name="book" type="tns:BookIDType" use="required" />
							<attribute name="lastBookAbbr" type="tns:AbbrType" use="optional" />
							<attribute name="lastBook" type="tns:BookIDType" use="optional" />
							<attribute name="firstChapter" type="tns:positiveIntType" use="optional" />
							<attribute name="firstVerse" type="tns:VerseNumberType" use="optional" />
							<attribute name="lastChapter" type="tns:positiveIntType" use="optional" />
							<attribute name="lastVerse" type="tns:VerseNumberType" use="optional" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="formattingInstruction">
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="kind" type="tns:FormattingInstructionKindType" use="required"></attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="cssFormatting">
				<annotation>
					<documentation>
						Formatting based on CSS rule. If possible, use formattingInstruction instead.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="css" type="string" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="verseSeparator">
				<annotation>
					<documentation>
						A marker inside a verse that is used to separate poem or psalm verses.
						Often rendered as a gray slash.
					</documentation>
				</annotation>
				<complexType></complexType>
			</element>
			<element name="lineBreak">
				<annotation>
					<documentation>
						A marker for a line break.

						Indent of -1 is treated as centered, and -2 as right justified.

						As this format follows the "verses first" paradigm, line breaks are stored inside the verses. A line break
						or paragraph between two verses is stored at the end of the previous verse.

						Chapters and headlines are considered to start a new paragraph automatically, so no need for additional tagging.
					</documentation>
				</annotation>
				<complexType>
					<attribute name="kind" type="tns:LineBreakKindType" use="required" />
					<attribute name="indent" use="optional">
						<simpleType>
							<restriction base="int">
								<minInclusive value="-2"></minInclusive>
								<maxInclusive value="9"></maxInclusive>
							</restriction>
						</simpleType>
					</attribute>
				</complexType>
			</element>
			<element name="grammarInformation">
				<annotation>
					<documentation>
						Used to wrap its content with grammar information.

						At least one type of grammar information needs to be present.

						If the strong numbers are just numbers, the prefix (G or H) is determined by the Testament the current
						verse is in. In case the prefix is different (e. g. LXX bible), it can be given as well (as a single
						letter). Strongs suffixes that are either uppercase or lowercase are also supported.

						RMAC codes should follow the RMACType rules to ensure that every RMAC can be converted
						if required.

						Source indices can refer to word numbers in some reference source text. This format does not
						store which source text is used in any way.

						Attr is for general key/value attributes. A key may occur more than once, neither keys nor values may contain whitespace.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="strongs" use="optional">
								<simpleType>
									<list>
										<simpleType>
											<restriction base="string">
												<pattern value="[A-Z]?[1-9][0-9]*[a-zA-Z]?"></pattern>
											</restriction>
										</simpleType>
									</list>
								</simpleType>
							</attribute>
							<attribute name="emptyStrongsSuffixesPresent" type="boolean" use="optional" />
							<attribute name="rmac" use="optional">
								<simpleType>
									<list itemType="tns:RMACType" />
								</simpleType>
							</attribute>
							<attribute name="sourceIndices" use="optional">
								<simpleType>
									<list>
										<simpleType>
											<restriction base="int">
												<minInclusive value="1"></minInclusive>
												<maxInclusive value="99"></maxInclusive>
											</restriction>
										</simpleType>
									</list>
								</simpleType>
							</attribute>
							<attribute name="attr" use="optional">
								<simpleType>
									<list>
										<simpleType>
											<restriction base="string">
												<pattern value="[a-z0-9_:-]+=.*"></pattern>
											</restriction>
										</simpleType>
									</list>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="dictionaryEntry">
				<annotation>
					<documentation>
						A reference to an explanatory topic in a dictionary. The dictionary is referenced by its name and an entry name.

						In general, bible formats that do not support dictionaries will ignore this entry. Other formats (like Zefania XML
						or MyBible.Zone) have command line options that can be used to map dictionary names to file names.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="dictionary" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[A-Za-z0-9]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
							<attribute name="entry" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[A-Za-z0-9-]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="rawHTML">
				<annotation>
					<documentation>
						Bibles can contain embedded Raw HTML. Formats that do not support Raw HTML
						(i.e. formats that are not HTML based) should skip these elements.

						Therefore, Raw HTML should not contain any elements that are required for the correct representation
						of the Bible. If required, normal text can be put between two Raw HTML elements, one that opens a HTML
						comment and one that closes it again.
					</documentation>
				</annotation>
				<complexType>
					<simpleContent>
						<extension base="string">
							<attribute name="mode" type="tns:RawHTMLModeType" use="required" />
						</extension>
					</simpleContent>
				</complexType>
			</element>
			<element name="speaker">
				<annotation>
					<documentation>
						This tag wraps text spoken by a speaker. The speaker can be either a name or a Strongs number.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="who" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[A-Za-z0-9_:-]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="hyperlink">
				<annotation>
					<documentation>
						Links to a different point in this document (specified by an anchor), to a different document, or to an image
						(which may be displayed inline).
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="type" type="tns:HyperlinkTypeType" use="required" />
							<attribute name="target" type="string" use="required" />
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="variation">
				<annotation>
					<documentation>
						This is quite an exotic feature and not supported by most Bible formats. It allows to encode small
						variations in the text without requiring a separate file for each variation.

						Each variation gives a list of variation names that include the text. Inside, arbitrary formatting
						tags can be nested.

						For formats that do not support variations, the SelectVariation argument of StrippedDiffable can be
						used to generate single-variation bible files from a multi-variation one.
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="variations" use="required">
								<simpleType>
									<list>
										<simpleType>
											<restriction base="string">
												<pattern value="[A-Za-z0-9-]+"></pattern>
											</restriction>
										</simpleType>
									</list>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
			<element name="extraAttribute">
				<annotation>
					<documentation>
						Extra attributes are used to encode features that are not supported by this format. They are mostly useful for
						"round trip" conversion from another format to this format, and back later after editing/processing.

						Values of extra attributes are quite limited (to make it easier for roundtrip formats to export/import them).

						If more complex values are required, nest the value inside the tag and specify a priority of "skip".
					</documentation>
				</annotation>
				<complexType>
					<complexContent>
						<extension base="tns:FormattedTextType">
							<attribute name="prio" type="tns:ExtraAttributePrioType" use="required" />
							<attribute name="category" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[a-z0-9]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
							<attribute name="key" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[a-z0-9-]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
							<attribute name="value" use="required">
								<simpleType>
									<restriction base="string">
										<pattern value="[A-Za-z0-9-]+"></pattern>
									</restriction>
								</simpleType>
							</attribute>
						</extension>
					</complexContent>
				</complexType>
			</element>
		</choice>
	</complexType>

	<complexType name="BibleType">
		<annotation>
			<documentation>
				Root type of this XML format. A bible has a name and multiple books.
				Introductions and Appendices are encoded as books with special book IDs, which only consist
				of a single prolog chapter.
			</documentation>
		</annotation>
		<sequence>
			<element name="book" minOccurs="1" maxOccurs="unbounded">
				<annotation>
					<documentation>
						Books have an ID, an abbreviation ("Col"), a short name ("Collosians") and a long name ("Epistle of Paul to the Colossians").

						The content of the book is divided into chapters. Chapters do not have any encoded numbers, the chapter numbers start by 1.

						A prolog of the whole book is encoded as a prolog of the first chapter (which may have no verses). If there is more than
						one chapter, the last chapter needs to have verses.
					</documentation>
				</annotation>
				<complexType>
					<sequence>
						<element name="chapter" minOccurs="1" maxOccurs="unbounded">
							<annotation>
								<documentation>
									Each chapter may have an optional prolog, and verses (except for prolog-only books, every chapter needs to have at least one verse).

									Verses have numbers and some (formatted) text; verse numbers do not need to be only numeric (see VerseNumberType) and also
									do not need to be consecutive.
								</documentation>
							</annotation>
							<complexType>
								<sequence>
									<element name="prolog" maxOccurs="1" minOccurs="0">
										<complexType>
											<complexContent>
												<extension base="tns:FormattedTextType" />
											</complexContent>
										</complexType>
									</element>
									<element name="verse" maxOccurs="unbounded" minOccurs="0">
										<complexType>
											<complexContent>
												<extension base="tns:FormattedTextType">
													<attribute name="number" type="tns:VerseNumberType" use="required"></attribute>
												</extension>
											</complexContent>
										</complexType>
									</element>
								</sequence>
							</complexType>
							<unique name="UniqueVerseNumber">
								<annotation>
									<documentation>Verse numbers in a chapter need to be unique.</documentation>
								</annotation>
								<selector xpath="tns:verse" />
								<field xpath="@number" />
							</unique>
						</element>
					</sequence>
					<attribute name="abbr" type="tns:AbbrType" use="required"></attribute>
					<attribute name="id" type="tns:BookIDType" use="required"></attribute>
					<attribute name="shortName" type="tns:NormalizedStringType" use="required"></attribute>
					<attribute name="longName" type="tns:NormalizedStringType" use="required"></attribute>
				</complexType>
			</element>
		</sequence>
		<attribute name="name" type="tns:NormalizedStringType" use="required"></attribute>
	</complexType>

	<element name="bible" type="tns:BibleType">
		<unique name="UniqueBookAbbr">
			<annotation>
				<documentation>Abbreviations of books need to be unique.</documentation>
			</annotation>
			<selector xpath="tns:book" />
			<field xpath="@abbr" />
		</unique>
		<unique name="UniqueBookID">
			<annotation>
				<documentation>Book IDs need to be unique.</documentation>
			</annotation>
			<selector xpath="tns:book" />
			<field xpath="@id" />
		</unique>
		<unique name="UniqueBookShortName">
			<annotation>
				<documentation>Short names of books need to be unique.</documentation>
			</annotation>
			<selector xpath="tns:book" />
			<field xpath="@shortName" />
		</unique>
		<unique name="UniqueBookLongName">
			<annotation>
				<documentation>Long names of books need to be unique.</documentation>
			</annotation>
			<selector xpath="tns:book" />
			<field xpath="@longName" />
		</unique>
	</element>
</schema>